
export default async function first({ page, enqueueLinks, request, log, addRequests }) {
    debugger
    // await enqueueLinks({
    //     selector: '.butonlar-sayfala a',
    //     label: 'list',
    // });
    const data = await page.evaluate(() => {
        const collection = Array.from(document.querySelectorAll(".film")).map(m => {
            // Check if elements exist before accessing properties
           const TVSERIES_TITLE = m.querySelector('.resim a[title]').getAttribute('title');

            const DETAIL_LINK = m.querySelector('.resim a').href;
            const POSTER_IMG = m.querySelector('.resim img')?.src;
            return {
                TVSERIES_TITLE,

                DETAIL_LINK,
                POSTER: {
                    POSTER_IMG,
                    POSTER_ORIENTATION: "portrait",
                    POSTER_QUALITY: 1
                },

            }
        });
        return collection
    })
    for (let d of data) {
        await addRequests([{ url: d.DETAIL_LINK, label: 'second', userData: { firstData: d } }])
    }
    debugger
    // return data

}

//https://www.diziizle.pw/1-erkek-1-kadin/
export async function second({ page, enqueueLinks, request, log, addRequests }) {

    debugger
    const { userData: { firstData } } = request

    const nextHref = await page.evaluate(() => document.querySelector('.dizi-izle a')?.href)
    debugger
    if(nextHref){
        console.log('added to third',nextHref)
        await addRequests([{ url: nextHref, label: 'third', userData: { firstData } }])
    }
  
    debugger




}


//https://www.diziizle.pw/1-erkek-1-kadin/bolum-138/
export async function third({ page, enqueueLinks, request, log, addRequests }) {

    debugger
    const { userData: { firstData } } = request
    debugger
    await page.waitForSelector('iframe');
   
debugger
const elementHandle = await page.$('iframe');

const frame = await elementHandle.contentFrame();

const elementHandle2 = await frame.$('iframe')

const frame2 = await elementHandle2.contentFrame();

const href = await frame2.$('a.ytp-title-link.yt-uix-sessionlink').href

debugger
    const WATCH_LINK = await page.evaluate(() => {
  
        const link = document.querySelector('a.ytp-title-link.yt-uix-sessionlink')?.href

        return link
    })
    debugger
    return { WATCH_LINK, ...firstData }



}

const urls = ["https://www.diziizle.pw/diziler/"]
export { urls }

